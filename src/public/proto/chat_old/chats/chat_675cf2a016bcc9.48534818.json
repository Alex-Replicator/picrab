{"messages":[{"role":"system","content":"\u0422\u044b \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0448\u044c \u043c\u043d\u0435 \u0440\u0430\u0437\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0438\u0441, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0447\u0438\u0441\u0442\u044b\u0439 HTML, CSS, JS, PHP \u0438 MySQL. \u041a\u043e\u0433\u0434\u0430 \u044f \u043f\u0440\u043e\u0448\u0443 \u0443 \u0442\u0435\u0431\u044f \u043a\u043e\u0434\u044b \u0444\u0430\u0439\u043b\u043e\u0432, \u043c\u043d\u0435 \u043d\u0443\u0436\u043d\u044b \u0438\u0445 \u043f\u043e\u043b\u043d\u044b\u0435, \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0451\u043d\u043d\u044b\u0435 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0435 \u0432\u0435\u0440\u0441\u0438\u0438. \u041d\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u0442\u0438\u043f\u0430 \\\/\\\/ \u0414\u0440\u0443\u0433\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u043f\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0438\u043b\u0438 \\\/\\\/ \u0414\u0440\u0443\u0433\u0438\u0435 \u0432\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0438 \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e. \u0412 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0435 \u043e\u0442\u0432\u0435\u0447\u0430\u0439 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u043e\u0433\u0434\u0430, \u043a\u043e\u0433\u0434\u0430 \u044f \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u043f\u043e\u043f\u0440\u043e\u0448\u0443 \u043e\u0431 \u044d\u0442\u043e\u043c. \u0412 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u044f\u0445 \u2014 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u043d\u044b\u0435 \u043a\u043e\u0434\u044b \u0444\u0430\u0439\u043b\u043e\u0432."},{"role":"user","content":"\u0423 \u043c\u0435\u043d\u044f \u0435\u0441\u0442\u044c \u0441\u043a\u0440\u0438\u043f\u0442, \u043d\u043e \u043e\u043d \u043f\u043e\u0447\u0435\u043c\u0443-\u0442\u043e \u043d\u0435 \u0432\u0438\u0434\u0438\u0442 exclude.conf   ``` #!\/usr\/bin\/env bash  # \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b check_command() {     COMMAND_NAME=$1     if ! command -v \"$COMMAND_NAME\" &amp;&gt; \/dev\/null; then         return 1     fi     return 0 }  # \u041c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043f\u0430\u043a\u0435\u0442\u043e\u0432 MISSING_PACKAGES=()  # \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445 \u043a\u043e\u043c\u0430\u043d\u0434 \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 if ! check_command \"rg\"; then     MISSING_PACKAGES+=(\"ripgrep\") fi  if ! check_command \"tree\"; then     MISSING_PACKAGES+=(\"tree\") fi  if ! check_command \"realpath\"; then     MISSING_PACKAGES+=(\"realpath\") fi  # \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u044b, \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0438\u0445 if [ ${#MISSING_PACKAGES[@]} -gt 0 ]; then     echo \"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b: ${MISSING_PACKAGES[@]}\"     echo \"\u041f\u044b\u0442\u0430\u044e\u0441\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u044b...\"     if ! sudo apt-get update; then         echo \"\u041e\u0448\u0438\u0431\u043a\u0430: \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0430\u043a\u0435\u0442\u043e\u0432.\"         exit 1     fi     if ! sudo apt-get install -y \"${MISSING_PACKAGES[@]}\"; then         echo \"\u041e\u0448\u0438\u0431\u043a\u0430: \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u0430\u043a\u0435\u0442\u044b: ${MISSING_PACKAGES[@]}\"         exit 1     fi      # \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0441\u043d\u043e\u0432\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438     for PACKAGE in \"${MISSING_PACKAGES[@]}\"; do         case $PACKAGE in             ripgrep)                 COMMAND_NAME=\"rg\"                 ;;             tree)                 COMMAND_NAME=\"tree\"                 ;;             realpath)                 COMMAND_NAME=\"realpath\"                 ;;             *)                 COMMAND_NAME=\"$PACKAGE\"                 ;;         esac         if ! check_command \"$COMMAND_NAME\"; then             echo \"\u041e\u0448\u0438\u0431\u043a\u0430: \u043a\u043e\u043c\u0430\u043d\u0434\u0430 $COMMAND_NAME \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 $PACKAGE.\"             exit 1         fi     done fi  # \u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0442\u0435\u043a\u0443\u0449\u0430\u044f \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f) DIRECTORY=${1:-.}  # \u041f\u0440\u0438\u0432\u043e\u0434\u0438\u043c DIRECTORY \u043a \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438 DIRECTORY=$(realpath \"$DIRECTORY\")  # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043f\u0443\u0442\u044c \u0434\u043e \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0430 SCRIPT_PATH=$(realpath \"$0\") SCRIPT_DIR=$(dirname \"$SCRIPT_PATH\")  # \u0424\u0430\u0439\u043b \u0432\u044b\u0432\u043e\u0434\u0430 OUTPUT=\"output.md\" OUTPUT_PATH=$(realpath \"$OUTPUT\")  # \u041e\u0447\u0438\u0441\u0442\u0438\u043c \u0444\u0430\u0439\u043b \u0432\u044b\u0432\u043e\u0434\u0430 \u043f\u0435\u0440\u0435\u0434 \u043d\u0430\u0447\u0430\u043b\u043e\u043c &gt; \"$OUTPUT\"  # \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043a\u043e\u0440\u043d\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u0430 find_project_root() {     dir=\"$1\"     script_dir=\"$2\"     while [ \"$dir\" != \"\/\" ]; do         # \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 exclude.conf         if [ -f \"$dir\/exclude.conf\" ] &amp;&amp; [ \"$dir\" != \"$script_dir\" ]; then             echo \"$dir\"             return         fi         # \u0417\u0430\u0442\u0435\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 .gitignore         if [ -f \"$dir\/.gitignore\" ] &amp;&amp; [ \"$dir\" != \"$script_dir\" ]; then             echo \"$dir\"             return         fi         dir=$(dirname \"$dir\")     done     # \u0415\u0441\u043b\u0438 \u043d\u0438 exclude.conf, \u043d\u0438 .gitignore \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u0443\u044e \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e     echo \"$1\" }  # \u041d\u0430\u0445\u043e\u0434\u0438\u043c \u043a\u043e\u0440\u0435\u043d\u044c \u043f\u0440\u043e\u0435\u043a\u0442\u0430 PROJECT_ROOT=$(find_project_root \"$DIRECTORY\" \"$SCRIPT_DIR\")  # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 if [ -f \"$PROJECT_ROOT\/exclude.conf\" ]; then     EXCLUDE_FILE=\"$PROJECT_ROOT\/exclude.conf\"     USE_EXCLUDE_CONF=true elif [ -f \"$PROJECT_ROOT\/.gitignore\" ]; then     EXCLUDE_FILE=\"$PROJECT_ROOT\/.gitignore\"     USE_EXCLUDE_CONF=false else     EXCLUDE_FILE=\"\" fi  # \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0432 \u043d\u0430\u0447\u0430\u043b\u043e \u0444\u0430\u0439\u043b\u0430 echo \"### \u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e '$DIRECTORY'\" &gt;&gt; \"$OUTPUT\"  echo \"\" &gt;&gt; \"$OUTPUT\" echo \"\\`\\`\\`\" &gt;&gt; \"$OUTPUT\" tree \"$DIRECTORY\" &gt;&gt; \"$OUTPUT\" echo \"\\`\\`\\`\" &gt;&gt; \"$OUTPUT\" echo \"\" &gt;&gt; \"$OUTPUT\" echo \"---\" &gt;&gt; \"$OUTPUT\" echo \"\" &gt;&gt; \"$OUTPUT\"  # \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u043e\u043f\u0446\u0438\u0438 \u0434\u043b\u044f ripgrep RG_OPTIONS=(\"--files\")  # \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c --ignore-file, \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0444\u0430\u0439\u043b \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 if [ -n \"$EXCLUDE_FILE\" ]; then     RG_OPTIONS+=(\"--ignore-file\" \"$EXCLUDE_FILE\") fi  # \u0418\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044e \u0441\u043a\u0440\u0438\u043f\u0442\u0430 REL_SCRIPT_DIR=${SCRIPT_DIR#\"$PROJECT_ROOT\/\"} if [ -n \"$REL_SCRIPT_DIR\" ] &amp;&amp; [ \"$REL_SCRIPT_DIR\" != \"$PROJECT_ROOT\" ]; then     RG_OPTIONS+=(\"--glob\" \"!$REL_SCRIPT_DIR\/**\") fi  # \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c rg \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0444\u0430\u0439\u043b\u043e\u0432 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 rg \"${RG_OPTIONS[@]}\" \"$DIRECTORY\" | while IFS= read -r FILE; do     # \u041f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0441\u0430\u043c \u0441\u043a\u0440\u0438\u043f\u0442 \u0438 \u0444\u0430\u0439\u043b \u0432\u044b\u0432\u043e\u0434\u0430     if [ \"$FILE\" = \"$SCRIPT_PATH\" ] || [ \"$FILE\" = \"$OUTPUT_PATH\" ] || [ \"$FILE\" = \"$EXCLUDE_FILE\" ]; then          continue     fi      # \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0444\u0430\u0439\u043b \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u043c     if file \"$FILE\" | grep -qE 'text|empty'; then         # \u041e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0443\u0442\u044c \u0444\u0430\u0439\u043b\u0430 \u043e\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438         RELATIVE_FILE=${FILE#\"$DIRECTORY\/\"}          echo \"#### \u0424\u0430\u0439\u043b: *$RELATIVE_FILE*\" &gt;&gt; \"$OUTPUT\"         echo \"\\`\\`\\`\" &gt;&gt; \"$OUTPUT\"         # \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0447\u0435\u0442\u044b\u0440\u0435 \u043f\u0440\u043e\u0431\u0435\u043b\u0430 \u043f\u0435\u0440\u0435\u0434 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430         awk '{print \"    \" $0}' \"$FILE\" &gt;&gt; \"$OUTPUT\"         echo \"\\`\\`\\`\" &gt;&gt; \"$OUTPUT\"         echo \"\" &gt;&gt; \"$OUTPUT\"         echo \"---\" &gt;&gt; \"$OUTPUT\"     else         echo \"\u041f\u0440\u043e\u043f\u0443\u0449\u0435\u043d \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0439 \u0444\u0430\u0439\u043b: $FILE\"     fi done  # \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 TOTAL_CHARS=$(wc -m &lt; \"$OUTPUT\") TOTAL_CHARS_NO_SPACES=$(tr -d '[:space:]' &lt; \"$OUTPUT\" | wc -c)  # \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432 \u043a\u043e\u043d\u0435\u0446 \u0444\u0430\u0439\u043b\u0430 echo \"\" &gt;&gt; \"$OUTPUT\" echo \"#### \u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430\" &gt;&gt; \"$OUTPUT\" echo \"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0438\u0442\u043e\u0433\u043e\u0432\u043e\u043c \u0444\u0430\u0439\u043b\u0435: $TOTAL_CHARS \u0437\u043d\u0430\u043a\u043e\u0432.\" &gt;&gt; \"$OUTPUT\" echo \"\u0421\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0431\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432: $TOTAL_CHARS_NO_SPACES \u0437\u043d\u0430\u043a\u043e\u0432.\" &gt;&gt; \"$OUTPUT\" echo \"---\" &gt;&gt; \"$OUTPUT\" echo \"\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0432\u0441\u0435\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043e \u0432 $OUTPUT\" ```"},{"role":"assistant","content":"\n\nThought about exclude.conf detection issue \u0434\u043b\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434```bash\n#!\/usr\/bin\/env bash\n\ncheck_command() {\n    COMMAND_NAME=$1\n    if ! command -v \"$COMMAND_NAME\" &>\/dev\/null; then\n        return 1\n    fi\n    return 0\n}\n\nMISSING_PACKAGES=()\n\nif ! check_command \"rg\"; then\n    MISSING_PACKAGES+=(\"ripgrep\")\nfi\n\nif ! check_command \"tree\"; then\n    MISSING_PACKAGES+=(\"tree\")\nfi\n\nif ! check_command \"realpath\"; then\n    MISSING_PACKAGES+=(\"realpath\")\nfi\n\nif [ ${#MISSING_PACKAGES[@]} -gt 0 ]; then\n    echo \"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b: ${MISSING_PACKAGES[@]}\"\n    echo \"\u041f\u044b\u0442\u0430\u044e\u0441\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u044b...\"\n    if ! sudo apt-get update; then\n        echo \"\u041e\u0448\u0438\u0431\u043a\u0430: \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0430\u043a\u0435\u0442\u043e\u0432.\"\n        exit 1\n    fi\n    if ! sudo apt-get install -y \"${MISSING_PACKAGES[@]}\"; then\n        echo \"\u041e\u0448\u0438\u0431\u043a\u0430: \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u0430\u043a\u0435\u0442\u044b: ${MISSING_PACKAGES[@]}\"\n        exit 1\n    fi\n    for PACKAGE in \"${MISSING_PACKAGES[@]}\"; do\n        case $PACKAGE in\n            ripgrep)\n                COMMAND_NAME=\"rg\"\n                ;;\n            tree)\n                COMMAND_NAME=\"tree\"\n                ;;\n            realpath)\n                COMMAND_NAME=\"realpath\"\n                ;;\n            *)\n                COMMAND_NAME=\"$PACKAGE\"\n                ;;\n        esac\n        if ! check_command \"$COMMAND_NAME\"; then\n            echo \"\u041e\u0448\u0438\u0431\u043a\u0430: \u043a\u043e\u043c\u0430\u043d\u0434\u0430 $COMMAND_NAME \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 $PACKAGE.\"\n            exit 1\n        fi\n    done\nfi\n\nDIRECTORY=${1:-.}\nDIRECTORY=$(realpath \"$DIRECTORY\")\nSCRIPT_PATH=$(realpath \"$0\")\nSCRIPT_DIR=$(dirname \"$SCRIPT_PATH\")\nOUTPUT=\"output.md\"\nOUTPUT_PATH=$(realpath \"$OUTPUT\")\n\n> \"$OUTPUT\"\n\nfind_project_root() {\n    dir=\"$1\"\n    while [ \"$dir\" != \"\/\" ]; do\n        if [ -f \"$dir\/exclude.conf\" ]; then\n            echo \"$dir\"\n            return\n        fi\n        if [ -f \"$dir\/.gitignore\" ]; then\n            echo \"$dir\"\n            return\n        fi\n        dir=$(dirname \"$dir\")\n    done\n    echo \"$1\"\n}\n\nPROJECT_ROOT=$(find_project_root \"$DIRECTORY\")\n\nif [ -f \"$PROJECT_ROOT\/exclude.conf\" ]; then\n    EXCLUDE_FILE=\"$PROJECT_ROOT\/exclude.conf\"\n    USE_EXCLUDE_CONF=true\nelif [ -f \"$PROJECT_ROOT\/.gitignore\" ]; then\n    EXCLUDE_FILE=\"$PROJECT_ROOT\/.gitignore\"\n    USE_EXCLUDE_CONF=false\nelse\n    EXCLUDE_FILE=\"\"\nfi\n\necho \"### \u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e '$DIRECTORY'\" >> \"$OUTPUT\"\necho \"\" >> \"$OUTPUT\"\necho \"```\" >> \"$OUTPUT\"\ntree \"$DIRECTORY\" >> \"$OUTPUT\"\necho \"```\" >> \"$OUTPUT\"\necho \"\" >> \"$OUTPUT\"\necho \"---\" >> \"$OUTPUT\"\necho \"\" >> \"$OUTPUT\"\n\nRG_OPTIONS=(\"--files\")\n\nif [ -n \"$EXCLUDE_FILE\" ]; then\n    RG_OPTIONS+=(\"--ignore-file\" \"$EXCLUDE_FILE\")\nfi\n\nREL_SCRIPT_DIR=${SCRIPT_DIR#\"$PROJECT_ROOT\/\"}\nif [ -n \"$REL_SCRIPT_DIR\" ] && [ \"$REL_SCRIPT_DIR\" != \"$PROJECT_ROOT\" ]; then\n    RG_OPTIONS+=(\"--glob\" \"!$REL_SCRIPT_DIR\/**\")\nfi\n\nrg \"${RG_OPTIONS[@]}\" \"$DIRECTORY\" | while IFS= read -r FILE; do\n    if [ \"$FILE\" = \"$SCRIPT_PATH\" ] || [ \"$FILE\" = \"$OUTPUT_PATH\" ] || [ \"$FILE\" = \"$EXCLUDE_FILE\" ]; then\n        continue\n    fi\n    if file \"$FILE\" | grep -qE 'text|empty'; then\n        RELATIVE_FILE=${FILE#\"$DIRECTORY\/\"}\n        echo \"#### \u0424\u0430\u0439\u043b: *$RELATIVE_FILE*\" >> \"$OUTPUT\"\n        echo \"```\" >> \"$OUTPUT\"\n        awk '{print \"    \" $0}' \"$FILE\" >> \"$OUTPUT\"\n        echo \"```\" >> \"$OUTPUT\"\n        echo \"\" >> \"$OUTPUT\"\n        echo \"---\" >> \"$OUTPUT\"\n    fi\ndone\n\nTOTAL_CHARS=$(wc -m < \"$OUTPUT\")\nTOTAL_CHARS_NO_SPACES=$(tr -d '[:space:]' < \"$OUTPUT\" | wc -c)\n\necho \"\" >> \"$OUTPUT\"\necho \"#### \u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0430\" >> \"$OUTPUT\"\necho \"\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u0438\u0442\u043e\u0433\u043e\u0432\u043e\u043c \u0444\u0430\u0439\u043b\u0435: $TOTAL_CHARS \u0437\u043d\u0430\u043a\u043e\u0432.\" >> \"$OUTPUT\"\necho \"\u0421\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0431\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432: $TOTAL_CHARS_NO_SPACES \u0437\u043d\u0430\u043a\u043e\u0432.\" >> \"$OUTPUT\"\necho \"---\" >> \"$OUTPUT\"\necho \"\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0432\u0441\u0435\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043e \u0432 $OUTPUT\" >> \"$OUTPUT\"\n```"}]}